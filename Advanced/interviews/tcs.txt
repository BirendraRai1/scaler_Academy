//remove fullName in key to name
let details = [{
    "fullName": "E-1",
    "age": 21
},{
    "fullName": "E-2",
    "age": 22
},{
    "fullName": "E-3",
    "age": 23
},{
    "fullName": "E-4",
    "age": 24
}];
1.Answer>for(let i=0;i<details.length;i++){
	let obj = details[i]
  for(let key in obj){
  	if(key =='fullName'){
    	obj.name = obj[key]
      delete obj[key]
    }
  }
}

2.Answer>for(let i=0;i<details.length;i++){
	for(let key in details[i]){
  	if(key=="fullName"){
    	details[i]["name"]=details[i][key]
      delete details[i][key]
    }    
  }
}

//remove duplicates in books
const books = [
    { title: "C++", author: "Bjarne" },
    { title: "Java", author: "James" },
    { title: "Python", author: "Guido" },
    { title: "Java", author: "James" }
    ]
    solution
    https://www.geeksforgeeks.org/how-to-remove-duplicates-from-an-array-of-objects-using-javascript/
ans1>let newArray = []
    let uniqueObjects = {}
    for(let i=0;i<books.length;i++){
	    uniqueObjects[books[i]["title"]]=books[i]
    }
    for(let key in uniqueObjects){
        newArray.push(uniqueObjects[key])
    }
    console.log(newArray)

ans2>let set = new Set()
        for(let i=0;i<books.length;i++){
            set.add(JSON.stringify(books[i]))
        }
        console.log(Array.from(set).map(JSON.parse))

ans3>let ids = books.map(({title})=>title)
     console.log(ids)
     let filteredBooks = books.filter(({title},index)=>!ids.includes(title,index+1))
     console.log(filteredBooks)
     The includes() method of Array instances determines whether an array includes a certain value among its entries, returning true or false as appropriate
//syntax of includes
includes(searchElement, fromIndex)

ans4>let newBooks = books.filter(({title},index)=>index===books.findIndex(o=>o.title==title))
     console.log(newBooks)
The findIndex() method of Array instances returns the index of the first element in an array that satisfies the provided testing function. 
If no elements satisfy the testing function, -1 is returned
//syntax of findIndex
findIndex(callbackFn, thisArg)


//new Features in ES6